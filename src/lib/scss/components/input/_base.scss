@use 'sass:math';
$base-borderRadius: $borderRadius * 1.3;
$base-borderWidth: $borderWidth * 1.5;
$base-marginX: $marginX;
$base-marginY: $marginY;
$base-paddingX: $paddingX;
$base-paddingY: $paddingY;
$base-fontSize: 0.8rem;
$icon-borderRadius: $borderRadius * 1;

& {
	position: relative;
	border-width: unset;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	align-self: center;
	flex-direction: row;
	margin: $base-marginY $base-marginX;
	border-radius: $base-borderRadius;
	.inputContainer {
		font-family: inherit;
		border-radius: inherit;
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;

		label {
			position: absolute;
			border-radius: inherit;
			// top: 0;
			left: 0;
			display: flex;
			justify-content: start;
			align-items: center;
			cursor: text;
			// width: 100%;
			box-sizing: border-box;
			height: 100%;
			font-size: $base-fontSize;
			@include truncate(100%);
			transition: padding 0.3s ease, top 0.3s ease, right 0.3s ease, left 0.3s ease,
				opacity 0.3s ease, color 0.3s ease;

			.icon {
				display: flex;
				justify-content: center;
				align-items: center;
				width: 0.8rem;
				height: 0.8rem;
				border-radius: $icon-borderRadius;
				border-width: $base-borderWidth;
				border-style: solid;
				padding: $base-paddingY $base-paddingX;
				margin: $base-paddingY * 0.5;
				font-size: $base-fontSize;
				font-family: inherit;
				// background-color: hsl(var(--font));
				transition: inherit;
				transition: padding 0.3s ease, border 0.3s ease, opacity 0.3s ease, color 0.3s ease,
					box-shadow 0.3s ease;
			}
			.label {
				box-sizing: border-box;
				padding: $base-paddingY $base-paddingX;
				display: flex;
				justify-content: center;
				align-items: center;
				transition: padding 0.3s ease, top 0.3s ease, right 0.3s ease, left 0.3s ease,
					opacity 0.3s ease, color 0.3s ease;
			}
		}

		input {
			border-radius: inherit;
			border-width: $base-borderWidth;
			border-style: solid;
			padding: $base-paddingY $base-paddingX;
			width: 100%;
			outline: none;
			min-width: 100px;
			font-size: $base-fontSize;
			font-family: inherit;
			background-color: hsl(var(--font));
			transition: padding 0.3s ease, color 0.3s ease, background-color 0.3s ease,
				border-color 0.3s ease, box-shadow 0.3s ease;
			box-sizing: border-box;
			&[type='number']::-webkit-inner-spin-button,
			&[type='number']::-webkit-outer-spin-button {
				visibility: hidden;
			}
			//   &[type="date"]::-webkit-calendar-picker-indicator {
			// }
			&[type='search']::-webkit-search-cancel-button {
				-webkit-appearance: none;
				height: 15px;
				width: 15px;
				margin-left: 0.4em;
				background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23c00'><path d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/></svg>");
				cursor: pointer;
			}
			&:not(:placeholder-shown) ~ label .label {
				opacity: 0;
				width: 0;
			}
		}
	}
	&.icon {
		.inputContainer {
			input {
				padding-left: calc($base-paddingX + 1.8rem);
			}
		}
	}

	&:focus-within {
		.inputContainer {
			.label {
				padding-left: $base-paddingX * 2.5;
				opacity: 0;
			}
			input {
				padding-left: $base-paddingX * 1.7;

				&:not(:placeholder-shown) ~ label .label {
					opacity: 0;
					width: 0;
				}
			}
		}
		&.icon {
			.inputContainer {
				input {
					padding-left: calc($base-paddingX + 2.2rem);
				}
			}
		}
	}
	&.rtl {
		.inputContainer {
			label {
				top: 0;
				left: unset;
				right: 0;
			}
			&:focus-within {
				.label {
					padding-left: $base-paddingX;
					padding-right: $base-paddingX * 2.5;
					visibility: hidden;
				}
				input {
					padding-left: $base-paddingX;
					padding-right: $base-paddingX * 1.7;
				}
			}
		}
		&.icon {
			.inputContainer {
				input {
					padding-right: calc($base-paddingX + 1.6rem);
					padding-left: 0;
				}
			}
			&:focus-within {
				.label {
					padding-right: $base-paddingX * 2.5;
				}
				input {
					padding-right: calc($base-paddingX + 2rem);
				}
			}
		}
	}
}
